; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26131.1 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?length@?$char_traits@D@std@@SA_KQEBD@Z		; std::char_traits<char>::length
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	main
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??_C@_0CB@NDDEJDPP@HARDWARE?2DESCRIPTION?2System?2BIOS@ ; `string'
PUBLIC	??_C@_0M@JNJNMLGA@BIOSVersion?$AA@		; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0N@NIKLNIDB@BIOSVersion?5?$AA@		; `string'
PUBLIC	??_C@_0DL@EGHOCGJA@SYSTEM?2CurrentControlSet?2Control@ ; `string'
PUBLIC	??_C@_0N@PGJFIOGB@ComputerName?$AA@		; `string'
PUBLIC	??_C@_0O@KPMHOAOC@ComputerName?5?$AA@		; `string'
PUBLIC	??_C@_0DD@NAEHEOOP@SYSTEM?2CurrentControlSet?2Control@ ; `string'
PUBLIC	??_C@_0BD@HODHPDCO@SystemManufacturer?$AA@	; `string'
PUBLIC	??_C@_0BE@EJCMBOJO@SystemManufacturer?5?$AA@	; `string'
PUBLIC	??_C@_09OKEOHNBO@UserName?5?$AA@		; `string'
EXTRN	strlen:PROC
EXTRN	__imp_GetUserNameA:PROC
EXTRN	__imp_RegOpenKeyExA:PROC
EXTRN	__imp_RegQueryValueExA:PROC
EXTRN	__imp_getchar:PROC
EXTRN	?uncaught_exceptions@std@@YAHXZ:PROC		; std::uncaught_exceptions
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$char_traits@D@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?length@?$char_traits@D@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+104
	DD	imagerel $unwind$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$char_traits@D@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?eof@?$char_traits@D@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+605
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1033
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+80
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+219
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+204
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN5
	DD	imagerel $LN5+319
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_09OKEOHNBO@UserName?5?$AA@
CONST	SEGMENT
??_C@_09OKEOHNBO@UserName?5?$AA@ DB 'UserName ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EJCMBOJO@SystemManufacturer?5?$AA@
CONST	SEGMENT
??_C@_0BE@EJCMBOJO@SystemManufacturer?5?$AA@ DB 'SystemManufacturer ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HODHPDCO@SystemManufacturer?$AA@
CONST	SEGMENT
??_C@_0BD@HODHPDCO@SystemManufacturer?$AA@ DB 'SystemManufacturer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@NAEHEOOP@SYSTEM?2CurrentControlSet?2Control@
CONST	SEGMENT
??_C@_0DD@NAEHEOOP@SYSTEM?2CurrentControlSet?2Control@ DB 'SYSTEM\Current'
	DB	'ControlSet\Control\SystemInformation', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KPMHOAOC@ComputerName?5?$AA@
CONST	SEGMENT
??_C@_0O@KPMHOAOC@ComputerName?5?$AA@ DB 'ComputerName ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PGJFIOGB@ComputerName?$AA@
CONST	SEGMENT
??_C@_0N@PGJFIOGB@ComputerName?$AA@ DB 'ComputerName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@EGHOCGJA@SYSTEM?2CurrentControlSet?2Control@
CONST	SEGMENT
??_C@_0DL@EGHOCGJA@SYSTEM?2CurrentControlSet?2Control@ DB 'SYSTEM\Current'
	DB	'ControlSet\Control\ComputerName\ComputerName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NIKLNIDB@BIOSVersion?5?$AA@
CONST	SEGMENT
??_C@_0N@NIKLNIDB@BIOSVersion?5?$AA@ DB 'BIOSVersion ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JNJNMLGA@BIOSVersion?$AA@
CONST	SEGMENT
??_C@_0M@JNJNMLGA@BIOSVersion?$AA@ DB 'BIOSVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NDDEJDPP@HARDWARE?2DESCRIPTION?2System?2BIOS@
CONST	SEGMENT
??_C@_0CB@NDDEJDPP@HARDWARE?2DESCRIPTION?2System?2BIOS@ DB 'HARDWARE\DESC'
	DB	'RIPTION\System\BIOS', 00H			; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+78
	DD	00H
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+302
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	0e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025053a11H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0e8H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025053519H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031019H
	DD	0700c4210H
	DD	0500bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+269
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+299
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+912
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+970
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+20
	DD	02H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+65
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 025054b19H
	DD	01132318H
	DD	0700c0049H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	023bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 088H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	08H
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0218H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	035052f19H
	DD	010a330fH
	DD	0700300f1H
	DD	05002H
	DD	imagerel __GSHandlerCheck
	DD	0778H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
main$rtcName$0 DB 072H
	DB	04bH
	DB	065H
	DB	079H
	DB	00H
	ORG $+3
main$rtcName$1 DB 064H
	DB	06bH
	DB	065H
	DB	079H
	DB	00H
	ORG $+3
main$rtcName$2 DB 052H
	DB	065H
	DB	067H
	DB	065H
	DB	074H
	DB	00H
	ORG $+2
main$rtcName$3 DB 052H
	DB	065H
	DB	067H
	DB	065H
	DB	074H
	DB	031H
	DB	00H
	ORG $+1
main$rtcName$4 DB 052H
	DB	065H
	DB	067H
	DB	065H
	DB	074H
	DB	032H
	DB	00H
	ORG $+1
main$rtcName$5 DB 052H
	DB	065H
	DB	067H
	DB	065H
	DB	074H
	DB	050H
	DB	061H
	DB	074H
	DB	068H
	DB	00H
	ORG $+2
main$rtcName$6 DB 06eH
	DB	061H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+3
main$rtcName$7 DB 073H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+7
main$rtcFrameData DD 08H
	DD	00H
	DQ	FLAT:main$rtcVarDesc
	ORG $+8
main$rtcVarDesc DD 0524H
	DD	04H
	DQ	FLAT:main$rtcName$7
	DD	0400H
	DD	0101H
	DQ	FLAT:main$rtcName$6
	DD	03d4H
	DD	04H
	DQ	FLAT:main$rtcName$5
	DD	02c0H
	DD	0100H
	DQ	FLAT:main$rtcName$4
	DD	01a0H
	DD	0100H
	DQ	FLAT:main$rtcName$3
	DD	080H
	DD	0100H
	DQ	FLAT:main$rtcName$2
	DD	058H
	DD	08H
	DQ	FLAT:main$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:main$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$char_traits@D@std@@SAHXZ DD 05051c01H
	DD	010a030dH
	DD	070030019H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z DD 05052d01H
	DD	01130316H
	DD	0700c001bH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$char_traits@D@std@@SA_KQEBD@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 05052801H
	DD	010e0311H
	DD	070070019H
	DD	05006H
xdata	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\ostream
; Line 139
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
; Line 140
  00028	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0002f	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
; Line 141
  00033	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003a	5f		 pop	 rdi
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\ostream
; Line 127
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
; Line 129
  00035	e8 00 00 00 00	 call	 ?uncaught_exceptions@std@@YAHXZ ; std::uncaught_exceptions
  0003a	90		 npad	 1
  0003b	85 c0		 test	 eax, eax
  0003d	75 11		 jne	 SHORT $LN2@sentry
; Line 131
  0003f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00046	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00049	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0004f	90		 npad	 1
$LN2@sentry:
; Line 136
  00050	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0005c	90		 npad	 1
  0005d	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00064	5f		 pop	 rdi
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Ostr$ = 264
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\ostream
; Line 120
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
; Line 119
  0003a	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  00041	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00048	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  0004d	90		 npad	 1
; Line 121
  0004e	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00055	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00058	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0005c	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00063	48 03 c8	 add	 rcx, rax
  00066	48 8b c1	 mov	 rax, rcx
  00069	48 8b c8	 mov	 rcx, rax
  0006c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00072	0f b6 c0	 movzx	 eax, al
  00075	85 c0		 test	 eax, eax
  00077	0f 84 83 00 00
	00		 je	 $LN2@sentry
  0007d	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00084	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00087	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0008b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00092	48 03 c8	 add	 rcx, rax
  00095	48 8b c1	 mov	 rax, rcx
  00098	48 8b c8	 mov	 rcx, rax
  0009b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000a1	48 85 c0	 test	 rax, rax
  000a4	74 5a		 je	 SHORT $LN2@sentry
  000a6	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000ad	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b0	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000b4	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000bb	48 03 c8	 add	 rcx, rax
  000be	48 8b c1	 mov	 rax, rcx
  000c1	48 8b c8	 mov	 rcx, rax
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000ca	48 3b 85 08 01
	00 00		 cmp	 rax, QWORD PTR _Ostr$[rbp]
  000d1	74 2d		 je	 SHORT $LN2@sentry
; Line 122
  000d3	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000da	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000dd	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000e1	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000e8	48 03 c8	 add	 rcx, rax
  000eb	48 8b c1	 mov	 rax, rcx
  000ee	48 8b c8	 mov	 rcx, rax
  000f1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000f7	48 8b c8	 mov	 rcx, rax
  000fa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
$LN2@sentry:
; Line 123
  00100	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00107	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0010a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0010e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00115	48 03 c8	 add	 rcx, rax
  00118	48 8b c1	 mov	 rax, rcx
  0011b	48 8b c8	 mov	 rcx, rax
  0011e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00124	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0012b	88 41 08	 mov	 BYTE PTR [rcx+8], al
; Line 124
  0012e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00135	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0013c	5f		 pop	 rdi
  0013d	5d		 pop	 rbp
  0013e	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
tv87 = 216
tv72 = 216
tv94 = 224
this$ = 272
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\ostream
; Line 104
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 c7 85 c8 00
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T1[rbp], -2
; Line 105
  00035	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00046	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv72[rbp]
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00054	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  0005b	48 03 c8	 add	 rcx, rax
  0005e	48 8b c1	 mov	 rax, rcx
  00061	48 8b c8	 mov	 rcx, rax
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0006a	90		 npad	 1
  0006b	48 85 c0	 test	 rax, rax
  0006e	74 52		 je	 SHORT $LN2@Sentry_bas
; Line 106
  00070	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00077	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007a	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  00081	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv87[rbp]
  00088	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0008f	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  00096	48 03 c8	 add	 rcx, rax
  00099	48 8b c1	 mov	 rax, rcx
  0009c	48 8b c8	 mov	 rcx, rax
  0009f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  000a5	90		 npad	 1
  000a6	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv94[rbp], rax
  000ad	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR tv94[rbp]
  000b4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b7	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR tv94[rbp]
  000be	ff 50 10	 call	 QWORD PTR [rax+16]
  000c1	90		 npad	 1
$LN2@Sentry_bas:
; Line 107
  000c2	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000c9	5f		 pop	 rdi
  000ca	5d		 pop	 rbp
  000cb	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
tv88 = 192
tv73 = 192
tv95 = 200
this$ = 240
_Ostr$ = 248
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\ostream
; Line 98
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
; Line 97
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0003d	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 99
  00040	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004a	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00051	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv73[rbp]
  00058	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0005f	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00066	48 03 c8	 add	 rcx, rax
  00069	48 8b c1	 mov	 rax, rcx
  0006c	48 8b c8	 mov	 rcx, rax
  0006f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00075	48 85 c0	 test	 rax, rax
  00078	74 50		 je	 SHORT $LN2@Sentry_bas
; Line 100
  0007a	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00081	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00084	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  0008b	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv88[rbp]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00099	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv88[rbp]
  000a0	48 03 c8	 add	 rcx, rax
  000a3	48 8b c1	 mov	 rax, rcx
  000a6	48 8b c8	 mov	 rcx, rax
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  000af	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv95[rbp], rax
  000b6	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR tv95[rbp]
  000bd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c0	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv95[rbp]
  000c7	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Sentry_bas:
; Line 101
  000ca	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d1	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000d8	5f		 pop	 rdi
  000d9	5d		 pop	 rbp
  000da	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv299 = 516
tv294 = 516
tv139 = 516
tv300 = 520
tv297 = 520
tv295 = 520
tv137 = 520
tv301 = 528
tv298 = 528
tv296 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\ostream
; Line 769
$LN25:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 48 02
	00 00		 sub	 rsp, 584		; 00000248H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 92 00 00 00	 mov	 ecx, 146		; 00000092H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 68
	02 00 00	 mov	 rcx, QWORD PTR [rsp+616]
  0002f	48 c7 85 f8 01
	00 00 fe ff ff
	ff		 mov	 QWORD PTR $T9[rbp], -2
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00041	48 33 c5	 xor	 rax, rbp
  00044	48 89 85 18 02
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
; Line 772
  0004b	c7 45 04 00 00
	00 00		 mov	 DWORD PTR _State$[rbp], 0
; Line 773
  00052	48 8b 8d 48 02
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  00059	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SA_KQEBD@Z ; std::char_traits<char>::length
  0005e	48 89 45 28	 mov	 QWORD PTR _Count$[rbp], rax
; Line 774
  00062	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00069	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00070	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 8b c8	 mov	 rcx, rax
  00080	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  00086	48 85 c0	 test	 rax, rax
  00089	7e 5b		 jle	 SHORT $LN17@operator
  0008b	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00092	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00095	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00099	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000a0	48 03 c8	 add	 rcx, rax
  000a3	48 8b c1	 mov	 rax, rcx
  000a6	48 8b c8	 mov	 rcx, rax
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000af	48 3b 45 28	 cmp	 rax, QWORD PTR _Count$[rbp]
  000b3	7e 31		 jle	 SHORT $LN17@operator
  000b5	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000bc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bf	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c3	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000ca	48 03 c8	 add	 rcx, rax
  000cd	48 8b c1	 mov	 rax, rcx
  000d0	48 8b c8	 mov	 rcx, rax
  000d3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000d9	48 2b 45 28	 sub	 rax, QWORD PTR _Count$[rbp]
  000dd	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv137[rbp], rax
  000e4	eb 0b		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000e6	48 c7 85 08 02
	00 00 00 00 00
	00		 mov	 QWORD PTR tv137[rbp], 0
$LN18@operator:
  000f1	48 8b 85 08 02
	00 00		 mov	 rax, QWORD PTR tv137[rbp]
  000f8	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
; Line 776
  000fc	48 8b 95 40 02
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  00103	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00107	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  0010c	90		 npad	 1
; Line 778
  0010d	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00111	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00116	0f b6 c0	 movzx	 eax, al
  00119	85 c0		 test	 eax, eax
  0011b	75 0e		 jne	 SHORT $LN8@operator
; Line 779
  0011d	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00120	83 c8 04	 or	 eax, 4
  00123	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
; Line 780
  00126	e9 67 02 00 00	 jmp	 $LN9@operator
$LN8@operator:
; Line 783
  0012b	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00132	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00135	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00139	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00140	48 03 c8	 add	 rcx, rax
  00143	48 8b c1	 mov	 rax, rcx
  00146	48 8b c8	 mov	 rcx, rax
  00149	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
  0014f	89 85 04 02 00
	00		 mov	 DWORD PTR tv139[rbp], eax
  00155	8b 85 04 02 00
	00		 mov	 eax, DWORD PTR tv139[rbp]
  0015b	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00160	83 f8 40	 cmp	 eax, 64			; 00000040H
  00163	0f 84 c8 00 00
	00		 je	 $LN11@operator
; Line 784
  00169	eb 0b		 jmp	 SHORT $LN4@operator
$LN2@operator:
  0016b	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  0016f	48 ff c8	 dec	 rax
  00172	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN4@operator:
  00176	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  0017b	0f 8e b0 00 00
	00		 jle	 $LN11@operator
; Line 785
  00181	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00188	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0018b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0018f	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00196	48 03 c8	 add	 rcx, rax
  00199	48 8b c1	 mov	 rax, rcx
  0019c	48 8b c8	 mov	 rcx, rax
  0019f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  001a5	88 85 04 02 00
	00		 mov	 BYTE PTR tv294[rbp], al
  001ab	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  001b2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001b5	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  001b9	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  001c0	48 03 c8	 add	 rcx, rax
  001c3	48 8b c1	 mov	 rax, rcx
  001c6	48 8b c8	 mov	 rcx, rax
  001c9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001cf	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv295[rbp], rax
  001d6	0f b6 95 04 02
	00 00		 movzx	 edx, BYTE PTR tv294[rbp]
  001dd	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR tv295[rbp]
  001e4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  001ea	89 85 10 02 00
	00		 mov	 DWORD PTR tv296[rbp], eax
  001f0	8b 85 10 02 00
	00		 mov	 eax, DWORD PTR tv296[rbp]
  001f6	89 85 54 01 00
	00		 mov	 DWORD PTR $T4[rbp], eax
  001fc	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00201	89 85 74 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00207	48 8d 95 54 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  0020e	48 8d 8d 74 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00215	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  0021a	0f b6 c0	 movzx	 eax, al
  0021d	85 c0		 test	 eax, eax
  0021f	74 0b		 je	 SHORT $LN12@operator
; Line 788
  00221	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00224	83 c8 04	 or	 eax, 4
  00227	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
; Line 789
  0022a	eb 05		 jmp	 SHORT $LN11@operator
$LN12@operator:
; Line 792
  0022c	e9 3a ff ff ff	 jmp	 $LN2@operator
$LN11@operator:
; Line 793
  00231	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  00235	75 60		 jne	 SHORT $LN13@operator
  00237	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0023e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00241	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00245	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0024c	48 03 c8	 add	 rcx, rax
  0024f	48 8b c1	 mov	 rax, rcx
  00252	48 8b c8	 mov	 rcx, rax
  00255	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0025b	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv297[rbp], rax
  00262	4c 8b 45 28	 mov	 r8, QWORD PTR _Count$[rbp]
  00266	48 8b 95 48 02
	00 00		 mov	 rdx, QWORD PTR _Val$[rbp]
  0026d	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR tv297[rbp]
  00274	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
  0027a	48 89 85 10 02
	00 00		 mov	 QWORD PTR tv298[rbp], rax
  00281	48 8b 45 28	 mov	 rax, QWORD PTR _Count$[rbp]
  00285	48 39 85 10 02
	00 00		 cmp	 QWORD PTR tv298[rbp], rax
  0028c	74 09		 je	 SHORT $LN13@operator
; Line 794
  0028e	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00291	83 c8 04	 or	 eax, 4
  00294	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
$LN13@operator:
; Line 796
  00297	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  0029b	0f 85 c8 00 00
	00		 jne	 $LN14@operator
; Line 797
  002a1	eb 0b		 jmp	 SHORT $LN7@operator
$LN5@operator:
  002a3	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  002a7	48 ff c8	 dec	 rax
  002aa	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN7@operator:
  002ae	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  002b3	0f 8e b0 00 00
	00		 jle	 $LN14@operator
; Line 798
  002b9	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  002c0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002c3	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002c7	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  002ce	48 03 c8	 add	 rcx, rax
  002d1	48 8b c1	 mov	 rax, rcx
  002d4	48 8b c8	 mov	 rcx, rax
  002d7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  002dd	88 85 04 02 00
	00		 mov	 BYTE PTR tv299[rbp], al
  002e3	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  002ea	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002ed	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002f1	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  002f8	48 03 c8	 add	 rcx, rax
  002fb	48 8b c1	 mov	 rax, rcx
  002fe	48 8b c8	 mov	 rcx, rax
  00301	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00307	48 89 85 08 02
	00 00		 mov	 QWORD PTR tv300[rbp], rax
  0030e	0f b6 95 04 02
	00 00		 movzx	 edx, BYTE PTR tv299[rbp]
  00315	48 8b 8d 08 02
	00 00		 mov	 rcx, QWORD PTR tv300[rbp]
  0031c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  00322	89 85 10 02 00
	00		 mov	 DWORD PTR tv301[rbp], eax
  00328	8b 85 10 02 00
	00		 mov	 eax, DWORD PTR tv301[rbp]
  0032e	89 85 94 01 00
	00		 mov	 DWORD PTR $T6[rbp], eax
  00334	e8 00 00 00 00	 call	 ?eof@?$char_traits@D@std@@SAHXZ ; std::char_traits<char>::eof
  00339	89 85 b4 01 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  0033f	48 8d 95 94 01
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  00346	48 8d 8d b4 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  0034d	e8 00 00 00 00	 call	 ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ; std::char_traits<char>::eq_int_type
  00352	0f b6 c0	 movzx	 eax, al
  00355	85 c0		 test	 eax, eax
  00357	74 0b		 je	 SHORT $LN15@operator
; Line 801
  00359	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  0035c	83 c8 04	 or	 eax, 4
  0035f	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
; Line 802
  00362	eb 05		 jmp	 SHORT $LN14@operator
$LN15@operator:
; Line 803
  00364	e9 3a ff ff ff	 jmp	 $LN5@operator
$LN14@operator:
; Line 804
  00369	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00370	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00373	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00377	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0037e	48 03 c8	 add	 rcx, rax
  00381	48 8b c1	 mov	 rax, rcx
  00384	33 d2		 xor	 edx, edx
  00386	48 8b c8	 mov	 rcx, rax
  00389	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
  0038f	90		 npad	 1
  00390	eb 00		 jmp	 SHORT $LN9@operator
$LN23@operator:
$LN9@operator:
; Line 808
  00392	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00399	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0039c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  003a0	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  003a7	48 03 c8	 add	 rcx, rax
  003aa	48 8b c1	 mov	 rax, rcx
  003ad	45 33 c0	 xor	 r8d, r8d
  003b0	8b 55 04	 mov	 edx, DWORD PTR _State$[rbp]
  003b3	48 8b c8	 mov	 rcx, rax
  003b6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
; Line 809
  003bc	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003c3	48 89 85 d8 01
	00 00		 mov	 QWORD PTR $T8[rbp], rax
  003ca	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  003ce	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  003d3	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR $T8[rbp]
; Line 810
  003da	48 8b f8	 mov	 rdi, rax
  003dd	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  003e1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
  003e8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  003ed	48 8b c7	 mov	 rax, rdi
  003f0	48 8b 8d 18 02
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  003f7	48 33 cd	 xor	 rcx, rbp
  003fa	e8 00 00 00 00	 call	 __security_check_cookie
  003ff	48 8d a5 28 02
	00 00		 lea	 rsp, QWORD PTR [rbp+552]
  00406	5f		 pop	 rdi
  00407	5d		 pop	 rbp
  00408	c3		 ret	 0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv299 = 516
tv294 = 516
tv139 = 516
tv300 = 520
tv297 = 520
tv295 = 520
tv137 = 520
tv301 = 528
tv298 = 528
tv296 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv299 = 516
tv294 = 516
tv139 = 516
tv300 = 520
tv297 = 520
tv295 = 520
tv137 = 520
tv301 = 528
tv298 = 528
tv296 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
; Line 805
  00024	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00029	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002e	55		 push	 rbp
  0002f	57		 push	 rdi
  00030	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00034	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00038	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00046	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0004d	48 03 c8	 add	 rcx, rax
  00050	48 8b c1	 mov	 rax, rcx
  00053	41 b0 01	 mov	 r8b, 1
  00056	ba 04 00 00 00	 mov	 edx, 4
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  00064	90		 npad	 1
  00065	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  0006c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00070	5f		 pop	 rdi
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
  00073	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv299 = 516
tv294 = 516
tv139 = 516
tv300 = 520
tv297 = 520
tv295 = 520
tv137 = 520
tv301 = 528
tv298 = 528
tv296 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
$T9 = 504
tv299 = 516
tv294 = 516
tv139 = 516
tv300 = 520
tv297 = 520
tv295 = 520
tv137 = 520
tv301 = 528
tv298 = 528
tv296 = 528
__$ArrayPad$ = 536
_Ostr$ = 576
_Val$ = 584
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
; Line 805
  00024	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00029	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002e	55		 push	 rbp
  0002f	57		 push	 rdi
  00030	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00034	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00038	48 8b 85 40 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00046	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0004d	48 03 c8	 add	 rcx, rax
  00050	48 8b c1	 mov	 rax, rcx
  00053	41 b0 01	 mov	 r8b, 1
  00056	ba 04 00 00 00	 mov	 edx, 4
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  00064	90		 npad	 1
  00065	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  0006c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00070	5f		 pop	 rdi
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
  00073	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT main
_TEXT	SEGMENT
rKey$ = 8
dkey$ = 40
Reget$ = 80
Reget1$ = 368
Reget2$ = 656
RegetPath$ = 932
name$ = 976
size$ = 1268
__$ArrayPad$ = 1864
main	PROC						; COMDAT
; File c:\users\pavel\documents\visual studio 2017\projects\project1\project1\source.cpp
; Line 6
$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 88 07
	00 00		 sub	 rsp, 1928		; 00000788H
  0000a	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 e2 01 00 00	 mov	 ecx, 482		; 000001e2H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00025	48 33 c5	 xor	 rax, rbp
  00028	48 89 85 48 07
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
; Line 9
  0002f	c7 85 a4 03 00
	00 00 01 00 00	 mov	 DWORD PTR RegetPath$[rbp], 256 ; 00000100H
; Line 11
  00039	c7 85 f4 04 00
	00 01 01 00 00	 mov	 DWORD PTR size$[rbp], 257 ; 00000101H
; Line 13
  00043	48 8d 45 08	 lea	 rax, QWORD PTR rKey$[rbp]
  00047	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004c	41 b9 01 00 00
	00		 mov	 r9d, 1
  00052	45 33 c0	 xor	 r8d, r8d
  00055	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CB@NDDEJDPP@HARDWARE?2DESCRIPTION?2System?2BIOS@
  0005c	48 c7 c1 02 00
	00 80		 mov	 rcx, -2147483646	; ffffffff80000002H
  00063	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegOpenKeyExA
; Line 14
  00069	48 8d 85 a4 03
	00 00		 lea	 rax, QWORD PTR RegetPath$[rbp]
  00070	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00075	48 8d 45 50	 lea	 rax, QWORD PTR Reget$[rbp]
  00079	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0007e	45 33 c9	 xor	 r9d, r9d
  00081	45 33 c0	 xor	 r8d, r8d
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@JNJNMLGA@BIOSVersion?$AA@
  0008b	48 8b 4d 08	 mov	 rcx, QWORD PTR rKey$[rbp]
  0008f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegQueryValueExA
; Line 15
  00095	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@NIKLNIDB@BIOSVersion?5?$AA@
  0009c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  000a3	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  000a8	48 8d 55 50	 lea	 rdx, QWORD PTR Reget$[rbp]
  000ac	48 8b c8	 mov	 rcx, rax
  000af	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  000b4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  000bb	48 8b c8	 mov	 rcx, rax
  000be	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; Line 17
  000c3	c7 85 a4 03 00
	00 00 01 00 00	 mov	 DWORD PTR RegetPath$[rbp], 256 ; 00000100H
; Line 18
  000cd	48 8d 45 28	 lea	 rax, QWORD PTR dkey$[rbp]
  000d1	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000d6	41 b9 01 00 00
	00		 mov	 r9d, 1
  000dc	45 33 c0	 xor	 r8d, r8d
  000df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DL@EGHOCGJA@SYSTEM?2CurrentControlSet?2Control@
  000e6	48 c7 c1 02 00
	00 80		 mov	 rcx, -2147483646	; ffffffff80000002H
  000ed	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegOpenKeyExA
; Line 19
  000f3	48 8d 85 a4 03
	00 00		 lea	 rax, QWORD PTR RegetPath$[rbp]
  000fa	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000ff	48 8d 85 70 01
	00 00		 lea	 rax, QWORD PTR Reget1$[rbp]
  00106	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0010b	45 33 c9	 xor	 r9d, r9d
  0010e	45 33 c0	 xor	 r8d, r8d
  00111	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@PGJFIOGB@ComputerName?$AA@
  00118	48 8b 4d 28	 mov	 rcx, QWORD PTR dkey$[rbp]
  0011c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegQueryValueExA
; Line 20
  00122	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@KPMHOAOC@ComputerName?5?$AA@
  00129	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00130	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00135	48 8d 95 70 01
	00 00		 lea	 rdx, QWORD PTR Reget1$[rbp]
  0013c	48 8b c8	 mov	 rcx, rax
  0013f	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00144	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  0014b	48 8b c8	 mov	 rcx, rax
  0014e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; Line 22
  00153	c7 85 a4 03 00
	00 00 01 00 00	 mov	 DWORD PTR RegetPath$[rbp], 256 ; 00000100H
; Line 23
  0015d	48 8d 45 28	 lea	 rax, QWORD PTR dkey$[rbp]
  00161	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00166	41 b9 01 00 00
	00		 mov	 r9d, 1
  0016c	45 33 c0	 xor	 r8d, r8d
  0016f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DD@NAEHEOOP@SYSTEM?2CurrentControlSet?2Control@
  00176	48 c7 c1 02 00
	00 80		 mov	 rcx, -2147483646	; ffffffff80000002H
  0017d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegOpenKeyExA
; Line 24
  00183	48 8d 85 a4 03
	00 00		 lea	 rax, QWORD PTR RegetPath$[rbp]
  0018a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0018f	48 8d 85 90 02
	00 00		 lea	 rax, QWORD PTR Reget2$[rbp]
  00196	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0019b	45 33 c9	 xor	 r9d, r9d
  0019e	45 33 c0	 xor	 r8d, r8d
  001a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@HODHPDCO@SystemManufacturer?$AA@
  001a8	48 8b 4d 28	 mov	 rcx, QWORD PTR dkey$[rbp]
  001ac	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegQueryValueExA
; Line 25
  001b2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BE@EJCMBOJO@SystemManufacturer?5?$AA@
  001b9	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  001c0	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  001c5	48 8d 95 90 02
	00 00		 lea	 rdx, QWORD PTR Reget2$[rbp]
  001cc	48 8b c8	 mov	 rcx, rax
  001cf	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  001d4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  001db	48 8b c8	 mov	 rcx, rax
  001de	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; Line 27
  001e3	48 8d 95 f4 04
	00 00		 lea	 rdx, QWORD PTR size$[rbp]
  001ea	48 8d 8d d0 03
	00 00		 lea	 rcx, QWORD PTR name$[rbp]
  001f1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetUserNameA
; Line 28
  001f7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09OKEOHNBO@UserName?5?$AA@
  001fe	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00205	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0020a	48 8d 95 d0 03
	00 00		 lea	 rdx, QWORD PTR name$[rbp]
  00211	48 8b c8	 mov	 rcx, rax
  00214	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00219	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  00220	48 8b c8	 mov	 rcx, rax
  00223	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; Line 30
  00228	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_getchar
; Line 31
  0022e	33 c0		 xor	 eax, eax
; Line 32
  00230	8b f8		 mov	 edi, eax
  00232	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00236	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:main$rtcFrameData
  0023d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00242	8b c7		 mov	 eax, edi
  00244	48 8b 8d 48 07
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0024b	48 33 cd	 xor	 rcx, rbp
  0024e	e8 00 00 00 00	 call	 __security_check_cookie
  00253	48 8d a5 58 07
	00 00		 lea	 rsp, QWORD PTR [rbp+1880]
  0025a	5f		 pop	 rdi
  0025b	5d		 pop	 rbp
  0025c	c3		 ret	 0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\iosfwd
; Line 522
$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000a	48 8b ec	 mov	 rbp, rsp
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
; Line 523
  0001c	b8 ff ff ff ff	 mov	 eax, -1
; Line 524
  00021	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00028	5f		 pop	 rdi
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
_Left$ = 240
_Right$ = 248
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\iosfwd
; Line 512
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+248]
; Line 513
  0002d	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00034	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0003b	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0003d	39 08		 cmp	 DWORD PTR [rax], ecx
  0003f	75 0c		 jne	 SHORT $LN3@eq_int_typ
  00041	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv65[rbp], 1
  0004b	eb 0a		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  0004d	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv65[rbp], 0
$LN4@eq_int_typ:
  00057	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv65[rbp]
; Line 514
  0005e	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00065	5f		 pop	 rdi
  00066	5d		 pop	 rbp
  00067	c3		 ret	 0
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$char_traits@D@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 224
?length@?$char_traits@D@std@@SA_KQEBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\iosfwd
; Line 442
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
; Line 446
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00031	e8 00 00 00 00	 call	 strlen
; Line 448
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?length@?$char_traits@D@std@@SA_KQEBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
; File c:\users\pavel\documents\visual studio 2017\projects\project1\project1\source.cpp
; Line 33
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00034	5f		 pop	 rdi
  00035	5d		 pop	 rbp
  00036	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
; File c:\users\pavel\documents\visual studio 2017\projects\project1\project1\source.cpp
; Line 33
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  0000e	48 8b ec	 mov	 rbp, rsp
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  00028	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0002f	5f		 pop	 rdi
  00030	5d		 pop	 rbp
  00031	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
